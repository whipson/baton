roxy_tag_parse.roxy_tag_batonFrequency <- function(x) {
if(x$raw == "") {
x$val <- "daily"
}
else if(x$raw %in% c("minutely", "hourly", "daily", "weekly", "monthly", "yearly")) {
x$val <- x$raw
}
else {
roxygen2::roxy_tag_warning(
x,
glue::glue(
"Invalid batonFrequency `{x$raw}`.
Must be one of 'minutely', 'hourly', 'daily', 'weekly', 'monthly', 'yearly'"
)
)
}
x
}
roxygen2::parse_file("sample_project/pipelines/mtcars_pipeline.R")
roxygen2::parse_file("sample_project/pipelines/mtcars_pipeline.R")
roxy_tag_parse.roxy_tag_batonFrequency <- function(x) {
if(x$raw == "") {
x$val <- "daily"
}
else if(x$raw %in% c("minutely", "hourly", "daily", "weekly", "monthly", "quarterly", "yearly")) {
x$val <- x$raw
}
else {
roxygen2::roxy_tag_warning(
x,
glue::glue(
"Invalid batonFrequency `{x$raw}`.
Must be one of 'minutely', 'hourly', 'daily', 'weekly', 'monthly', 'quarterly', 'yearly'"
)
)
return()
}
x
}
roxygen2::parse_file("sample_project/pipelines/mtcars_pipeline.R")
roxygen2::parse_file("sample_project/pipelines/mtcars_pipeline.R")
?roxygen2::block_get_tag
roxy_tag_parse.roxy_tag_batonFrequency <- function(x) {
if(x$raw == "") {
x$val <- "daily"
}
else if(x$raw %in% c("minutely", "hourly", "daily", "weekly", "monthly", "quarterly", "yearly")) {
x$val <- x$raw
}
else {
roxygen2::roxy_tag_warning(
x,
glue::glue(
"Invalid batonFrequency `{x$raw}`.
Must be one of 'minutely', 'hourly', 'daily', 'weekly', 'monthly', 'quarterly', 'yearly'"
)
)
return()
}
x
}
batonFrequency_roclet <- function() {
roxygen2::roclet("batonFrequency")
}
roclet_process.batonFrequency_roclet <- function(x, blocks, env, base_path) {
browser()
tags <- roxygen2::block_get_tag(block, "batonFrequency")
tags$val
}
roxygen2::roc_proc_text(batonFrequency_roclet(), "#' Simple mtcars print function
#'
#' @batonFrequency daily
#' @batonInterval 1
#' @batonStartTime 2024-03-01 09:00:00
#' @batonEndTime NULL
#' @batonTz UTC
#'
#' @batonName mtcars_simple
#'
#' @export
get_mtcars <- function() {
mtcars
}")
roclet_process.roclet_batonFrequency <- function(x, blocks, env, base_path) {
browser()
tags <- roxygen2::block_get_tag(block, "batonFrequency")
tags$val
}
roxygen2::roc_proc_text(batonFrequency_roclet(), "#' Simple mtcars print function
#'
#' @batonFrequency daily
#' @batonInterval 1
#' @batonStartTime 2024-03-01 09:00:00
#' @batonEndTime NULL
#' @batonTz UTC
#'
#' @batonName mtcars_simple
#'
#' @export
get_mtcars <- function() {
mtcars
}")
tags <- roxygen2::block_get_tag(block, "batonFrequency")
block
blocks
evn
env
x
blocks
blocks[[1]]
blocks[[1]]$call
blocks[[1]]$object$topic
roxygen2::tags_metadata(tags)
roxygen2::tags_metadata(blocks)
roxygen2::tags_metadata()
roxygen2::block_get_tags(blocks)
roxygen2::block_get_tag(blocks)
roxygen2::block_get_tag(blocks, "batonFrequency")
tags <- roxygen2::block_get_tag(blocks, "batonFrequency")
blocks
tags <- roxygen2::block_get_tag(blocks[[1]], "batonFrequency")
tags
tags$val
tags$file
tags$line
tags
list(
val = tags$val,
node = blocks[[1]]$object$methods
)
list(
val = tags$val,
node = blocks[[1]]$object$topic
)
blocks[[1]]
blocks[[1]]$object$value()
blocks[[1]]$object$methods
batonFrequency_roclet <- function() {
roxygen2::roclet("batonFrequency")
}
roclet_process.roclet_batonFrequency <- function(x, blocks, env, base_path) {
tags <- roxygen2::block_get_tag(blocks[[1]], "batonFrequency")
list(
val = tags$val,
node = blocks[[1]]$object$topic
)
}
roxygen2::roc_proc_text(batonFrequency_roclet(), "#' Simple mtcars print function
#'
#' @batonFrequency daily
#' @batonInterval 1
#' @batonStartTime 2024-03-01 09:00:00
#' @batonEndTime NULL
#' @batonTz UTC
#'
#' @batonName mtcars_simple
#'
#' @export
get_mtcars <- function() {
mtcars
}")
roxygen2::roxygenize(roclets = "baton::batonFrequency")
library(baton)
roxygen2::roxygenize(roclets = "baton::batonFrequency")
library(baton)
roxygen2::roxygenize(roclets = "baton::batonFrequency")
renv::snapshot()
roxygen2::roxygenize(roclets = "baton::batonFrequency_roclet")
roxygen2::roxygenize(roclets = "baton::batonFrequency_roclet")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(baton)
baton::batonFrequency_roclet()
baton:::batonFrequency_roclet()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
baton:::batonFrequency_roclet()
devtools::document()
devtools::document()
devtools::document()
devtools::document(roclets = c("collate", "rd", "namespace", "baton::batonFrequency_roclet"))
roxygen2::roclet("batonFrequency")
roxygen2::roclet("batonFrequency")
devtools::document(roclets = c("collate", "rd", "namespace", "baton::batonFrequency_roclet"))
roxygen2::roxygenise(roclets = c("collate", "rd", "namespace", "baton::batonFrequency_roclet"))
#' @export
batonFrequency_roclet <- function() {
roxygen2::roclet("batonFrequency")
}
roxygen2::roxygenise(roclets = c("collate", "rd", "namespace", "baton::batonFrequency_roclet"))
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
cli::cli("hello", "world")
devtools::document()
#' @export
roxy_tag_parse.roxy_tag_batonFrequency <- function(x) {
if(x$raw == "") {
x$val <- "daily"
}
else if(x$raw %in% c("minutely", "hourly", "daily", "weekly", "monthly", "quarterly", "yearly")) {
x$val <- x$raw
}
else {
roxygen2::roxy_tag_warning(
x,
glue::glue(
"Invalid batonFrequency `{x$raw}`.
Must be one of 'minutely', 'hourly', 'daily', 'weekly', 'monthly', 'quarterly', 'yearly'"
)
)
return()
}
x
}
#' @export
batonFrequency_roclet <- function() {
roxygen2::roclet("batonFrequency")
}
#' @importFrom roxygen2 roclet_process
#' @export
roclet_process.roclet_batonFrequency <- function(x, blocks, env, base_path) {
tags <- roxygen2::block_get_tag(blocks[[1]], "batonFrequency")
list(
val = tags$val,
node = blocks[[1]]$object$topic
)
}
#' @export
roclet_output.roclet_batonFrequency <- function(x, results, base_path, ...) {
cli::cli(glue::glue("{results$node}: {results:val}"))
invisible(NULL)
}
results <- roclet_process(batonFrequency_roclet(), "#' Simple mtcars print function
#'
#' @batonFrequency daily
#' @batonInterval 1
#' @batonStartTime 2024-03-01 09:00:00
#' @batonEndTime NULL
#' @batonTz UTC
#'
#' @batonName mtcars_simple
#'
#' @export
get_mtcars <- function() {
mtcars
}
")
roxygen2::roclet("batonFrequency")
batonFrequency_roclet()
library(roxygen2)
results <- roclet_process(batonFrequency_roclet(), "#' Simple mtcars print function
#'
#' @batonFrequency daily
#' @batonInterval 1
#' @batonStartTime 2024-03-01 09:00:00
#' @batonEndTime NULL
#' @batonTz UTC
#'
#' @batonName mtcars_simple
#'
#' @export
get_mtcars <- function() {
mtcars
}
")
#' @importFrom roxygen2 roclet_process
#' @export
roclet_process.roclet_batonFrequency <- function(x, blocks, env, base_path) {
browser()
tags <- roxygen2::block_get_tag(blocks[[1]], "batonFrequency")
list(
val = tags$val,
node = blocks[[1]]$object$topic
)
}
results <- roclet_process(batonFrequency_roclet(), "#' Simple mtcars print function
#'
#' @batonFrequency daily
#' @batonInterval 1
#' @batonStartTime 2024-03-01 09:00:00
#' @batonEndTime NULL
#' @batonTz UTC
#'
#' @batonName mtcars_simple
#'
#' @export
get_mtcars <- function() {
mtcars
}
")
results <- roclet_process(batonFrequency_roclet(), "#' Simple mtcars print function
#'
#' @batonFrequency daily
#' @batonInterval 1
#' @batonStartTime 2024-03-01 09:00:00
#' @batonEndTime NULL
#' @batonTz UTC
#'
#' @batonName mtcars_simple
#'
#' @export
get_mtcars <- function() {
mtcars
}
")
blocks[[1]]
blocks''
blocks
tags <- roxygen2::block_get_tag(blocks[[1]], "batonFrequency")
tags <- roxygen2::block_get_tag(blocks, "batonFrequency")
#' @export
roxy_tag_parse.roxy_tag_batonFrequency <- function(x) {
if(x$raw == "") {
x$val <- "daily"
}
else if(x$raw %in% c("minutely", "hourly", "daily", "weekly", "monthly", "quarterly", "yearly")) {
x$val <- x$raw
}
else {
roxygen2::roxy_tag_warning(
x,
glue::glue(
"Invalid batonFrequency `{x$raw}`.
Must be one of 'minutely', 'hourly', 'daily', 'weekly', 'monthly', 'quarterly', 'yearly'"
)
)
return()
}
x
}
#' @export
batonFrequency_roclet <- function() {
roxygen2::roclet("batonFrequency")
}
#' @importFrom roxygen2 roclet_process
#' @export
roclet_process.roclet_batonFrequency <- function(x, blocks, env, base_path) {
tags <- roxygen2::block_get_tag(blocks[[1]], "batonFrequency")
list(
val = tags$val,
node = blocks[[1]]$object$topic
)
}
#' @export
roclet_output.roclet_batonFrequency <- function(x, results, base_path, ...) {
cli::cli(glue::glue("{results$node}: {results:val}"))
invisible(NULL)
}
results <- roclet_process(batonFrequency_roclet(), "#' Simple mtcars print function
#'
#' @batonFrequency daily
#' @batonInterval 1
#' @batonStartTime 2024-03-01 09:00:00
#' @batonEndTime NULL
#' @batonTz UTC
#'
#' @batonName mtcars_simple
#'
#' @export
get_mtcars <- function() {
mtcars
}
")
#' @export
roxy_tag_parse.roxy_tag_batonFrequency <- function(x) {
if(x$raw == "") {
x$val <- "daily"
}
else if(x$raw %in% c("minutely", "hourly", "daily", "weekly", "monthly", "quarterly", "yearly")) {
x$val <- x$raw
}
else {
roxygen2::roxy_tag_warning(
x,
glue::glue(
"Invalid batonFrequency `{x$raw}`.
Must be one of 'minutely', 'hourly', 'daily', 'weekly', 'monthly', 'quarterly', 'yearly'"
)
)
return()
}
x
}
#' @export
batonFrequency_roclet <- function() {
roxygen2::roclet("batonFrequency")
}
#' @export
roclet_process.roclet_batonFrequency <- function(x, blocks, env, base_path) {
tags <- roxygen2::block_get_tag(blocks[[1]], "batonFrequency")
list(
val = tags$val,
node = blocks[[1]]$object$topic
)
}
#' @export
roclet_output.roclet_batonFrequency <- function(x, results, base_path, ...) {
cli::cli(glue::glue("{results$node}: {results:val}"))
invisible(NULL)
}
results <- roclet_process(batonFrequency_roclet(), "#' Simple mtcars print function
#'
#' @batonFrequency daily
#' @batonInterval 1
#' @batonStartTime 2024-03-01 09:00:00
#' @batonEndTime NULL
#' @batonTz UTC
#'
#' @batonName mtcars_simple
#'
#' @export
get_mtcars <- function() {
mtcars
}
")
library(roxygen2)
results <- roclet_process(batonFrequency_roclet(), "#' Simple mtcars print function
#'
#' @batonFrequency daily
#' @batonInterval 1
#' @batonStartTime 2024-03-01 09:00:00
#' @batonEndTime NULL
#' @batonTz UTC
#'
#' @batonName mtcars_simple
#'
#' @export
get_mtcars <- function() {
mtcars
}
")
roxygen2::parse_file("sample_project/pipelines/mtcars_pipeline.R")
results <- roc_proc_text(batonFrequency_roclet(), "#' Simple mtcars print function
#'
#' @batonFrequency daily
#' @batonInterval 1
#' @batonStartTime 2024-03-01 09:00:00
#' @batonEndTime NULL
#' @batonTz UTC
#'
#' @batonName mtcars_simple
#'
#' @export
get_mtcars <- function() {
mtcars
}
")
results <- roc_proc_text(batonFrequency_roclet(), "#' Simple mtcars print function
#'
#' @batonFrequency daily
#' @batonInterval 1
#' @batonStartTime 2024-03-01 09:00:00
#' @batonEndTime NULL
#' @batonTz UTC
#'
#' @batonName mtcars_simple
#'
#' @export
get_mtcars <- function() {
mtcars
}
") -> results
results
roclet_output(batonFrequency_roclet(), results)
results$val
#' @export
roclet_output.roclet_batonFrequency <- function(x, results, base_path, ...) {
browser()
cli::cli(glue::glue("{results$node}: {results:val}"))
invisible(NULL)
}
results$val
roclet_output(batonFrequency_roclet(), results)
results
cli::cli(glue::glue("{results$node}: {results:val}"))
#' @export
roclet_output.roclet_batonFrequency <- function(x, results, base_path, ...) {
cli::cli(glue::glue("{results$node}: {results$val}"))
invisible(NULL)
}
roclet_output(batonFrequency_roclet(), results)
devtools::document()
renv::status()
renv::snapshot()
devto
devtools::document()
renv::install("devtools")
devtools::document()
library(baton)
devtools::document()
devtools::document()
usethis::use_namespace()
devtools::document()
library(baton)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
roxygen2::roxygenise(roclets = "baton::batonFrequency_roclet")
roxygen2::roxygenise(roclets = "bbatonFrequency_roclet")
roxygen2::roxygenise(roclets = "batonFrequency_roclet")
